var JSEvents=function(){function e(){}return e.addEventListener=function(n,t,r){if(!n)throw new Error("An Event must have a valid name");if(!t)throw new Error("An Event must have a valid callback function");if(!r)throw new Error("An Event must have a valid scope");for(var a=[],v=0;v<arguments.length;v++)a.push(arguments[v]);e.events[n]?e.events[n].push({scope:r,callback:t,args:a}):e.events[n]=[{scope:r,callback:t,args:a}]},e.removeEventListener=function(n,t,r){if(!n)throw new Error("An Event must have a valid name inorder to remove it");if(!t)throw new Error("An Event must have a valid callback function to remove it");if(!r)throw new Error("An Event must have a valid scope");if(e.events[n]){var a=[];a=e.events[n].filter(function(e){return!(e.scope===r&&e.callback===t)}),e.events[n]=a,0===e.events[n].length&&delete e.events[n]}},e.hasEventListener=function(n,t,r){if(!n)throw new Error("An Event must have a valid name");if(!t)throw new Error("An Event must have a valid callback function");if(e.events[n]){if(0===e.events[n].length)return!1;for(var a=!1,v=0,o=e.events[n];v<o.length;v++){var s=o[v];if(s.scope===r&&s.callback===t){a=!0;break}}return!0===a}return!1},e.dispatchEvent=function(n,t){for(var r=[],a=0;a<arguments.length;a++)r.push(arguments[a]);r.splice(0,1);var v={data:r,name:n,target:null};if(!n)throw new Error("An Event must have a valid name");if(e.events[n]){if(e.events[n].length>0)for(var o=e.events[n],s=0,i=o;s<i.length;s++){var c=i[s];v.target=c.scope;var l=[v].concat(r);c.callback&&"function"==typeof c.callback&&c.callback.apply(v,l)}}else console.warn("No event with name "+n+" exists in the JSEvents store")},Object.defineProperty(e,"registeredEvents",{get:function(){return e.events},enumerable:!0,configurable:!0}),e.events={},e}();